headers_src = [
    "include/uapi/*/**/*.h",
]

camera_headers_out = [
    "media/msm_cam_sensor.h",
    "media/msm_camera.h",
    "media/msm_camsensor_sdk.h",
    "media/msm_fd.h",
    "media/msm_isp.h",
    "media/msm_jpeg.h",
    "media/msm_jpeg_dma.h",
    "media/msm_media_info.h",
    "media/msmb_camera.h",
    "media/msmb_generic_buf_mgr.h",
    "media/msmb_isp.h",
    "media/msmb_ispif.h",
    "media/msmb_pproc.h",
]

camera_kernel_headers_verbose = "--verbose "
genrule {
    name: "qti_generate_camera_kernel_headers",
    tools: ["headers_install.sh",
            "unifdef"
    ],
    tool_files: [
        "camera_kernel_headers.py",
    ],
    srcs: headers_src,
    cmd: "python3 -u $(location camera_kernel_headers.py) " +
          camera_kernel_headers_verbose +
         "--header_arch arm64 " +
         "--gen_dir $(genDir) " +
         "--camera_include_uapi $(locations include/uapi/*/**/*.h) " +
         "--unifdef $(location unifdef) " +
         "--headers_install $(location headers_install.sh)",
    out: camera_headers_out,
}

cc_library_headers {
    name: "qti_camera_kernel_uapi",
    generated_headers: ["qti_generate_camera_kernel_headers"],
    export_generated_headers: ["qti_generate_camera_kernel_headers"],
    vendor: true,
    recovery_available: true
}
